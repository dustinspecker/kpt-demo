apiVersion: v1
kind: Namespace
metadata:
  name: ingress-nginx
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
---
apiVersion: v1 # Source: ingress-nginx/templates/controller-serviceaccount.yaml
kind: ServiceAccount
metadata:
  name: ingress-nginx
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.31.1
    helm.sh/chart: ingress-nginx-2.0.1
---
apiVersion: v1 # Source: ingress-nginx/templates/controller-configmap.yaml
kind: ConfigMap
metadata:
  name: ingress-nginx-controller
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.31.1
    helm.sh/chart: ingress-nginx-2.0.1
data:
---
apiVersion: rbac.authorization.k8s.io/v1 # Source: ingress-nginx/templates/clusterrole.yaml
kind: ClusterRole
metadata:
  name: ingress-nginx
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.31.1
    helm.sh/chart: ingress-nginx-2.0.1
rules:
- resources:
  - configmaps
  - endpoints
  - nodes
  - pods
  - secrets
  apiGroups:
  - ''
  verbs:
  - list
  - watch
- resources:
  - nodes
  apiGroups:
  - ''
  verbs:
  - get
- resources:
  - services
  apiGroups:
  - ''
  verbs:
  - get
  - list
  - update
  - watch
- resources:
  - ingresses
  apiGroups:
  - extensions
  - networking.k8s.io # k8s 1.14+
  verbs:
  - get
  - list
  - watch
- resources:
  - events
  apiGroups:
  - ''
  verbs:
  - create
  - patch
- resources:
  - ingresses/status
  apiGroups:
  - extensions
  - networking.k8s.io # k8s 1.14+
  verbs:
  - update
- resources:
  - ingressclasses
  apiGroups:
  - networking.k8s.io # k8s 1.14+
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1 # Source: ingress-nginx/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
metadata:
  name: ingress-nginx
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.31.1
    helm.sh/chart: ingress-nginx-2.0.1
roleRef:
  name: ingress-nginx
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
subjects:
- name: ingress-nginx
  namespace: ingress-nginx
  kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1 # Source: ingress-nginx/templates/controller-role.yaml
kind: Role
metadata:
  name: ingress-nginx
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.31.1
    helm.sh/chart: ingress-nginx-2.0.1
rules:
- resources:
  - namespaces
  apiGroups:
  - ''
  verbs:
  - get
- resources:
  - configmaps
  - pods
  - secrets
  - endpoints
  apiGroups:
  - ''
  verbs:
  - get
  - list
  - watch
- resources:
  - services
  apiGroups:
  - ''
  verbs:
  - get
  - list
  - update
  - watch
- resources:
  - ingresses
  apiGroups:
  - extensions
  - networking.k8s.io # k8s 1.14+
  verbs:
  - get
  - list
  - watch
- resources:
  - ingresses/status
  apiGroups:
  - extensions
  - networking.k8s.io # k8s 1.14+
  verbs:
  - update
- resources:
  - ingressclasses
  apiGroups:
  - networking.k8s.io # k8s 1.14+
  verbs:
  - get
  - list
  - watch
- resources:
  - configmaps
  apiGroups:
  - ''
  resourceNames:
  - ingress-controller-leader-nginx
  verbs:
  - get
  - update
- resources:
  - configmaps
  apiGroups:
  - ''
  verbs:
  - create
- resources:
  - endpoints
  apiGroups:
  - ''
  verbs:
  - create
  - get
  - update
- resources:
  - events
  apiGroups:
  - ''
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1 # Source: ingress-nginx/templates/controller-rolebinding.yaml
kind: RoleBinding
metadata:
  name: ingress-nginx
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.31.1
    helm.sh/chart: ingress-nginx-2.0.1
roleRef:
  name: ingress-nginx
  kind: Role
  apiGroup: rbac.authorization.k8s.io
subjects:
- name: ingress-nginx
  namespace: ingress-nginx
  kind: ServiceAccount
---
apiVersion: v1 # Source: ingress-nginx/templates/controller-service-webhook.yaml
kind: Service
metadata:
  name: ingress-nginx-controller-admission
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.31.1
    helm.sh/chart: ingress-nginx-2.0.1
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  ports:
  - name: https-webhook
    port: 443
    targetPort: webhook
---
apiVersion: apps/v1 # Source: ingress-nginx/templates/controller-deployment.yaml
kind: Deployment
metadata:
  name: ingress-nginx-controller
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.31.1
    helm.sh/chart: ingress-nginx-2.0.1
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
    spec:
      terminationGracePeriodSeconds: 300
      dnsPolicy: ClusterFirst
      serviceAccountName: ingress-nginx
      containers:
      - name: controller
        image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.31.1
        args:
        - /nginx-ingress-controller
        - --election-id=ingress-controller-leader
        - --ingress-class=nginx
        - --configmap=ingress-nginx/ingress-nginx-controller
        - --validating-webhook=:8443
        - --validating-webhook-certificate=/usr/local/certificates/cert
        - --validating-webhook-key=/usr/local/certificates/key
        ports:
        - name: http
          protocol: TCP
          containerPort: 80
        - name: https
          protocol: TCP
          containerPort: 443
        - name: webhook
          protocol: TCP
          containerPort: 8443
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 100m
            memory: 90Mi
        volumeMounts:
        - name: webhook-cert
          readOnly: true
          mountPath: /usr/local/certificates/
        livenessProbe:
          failureThreshold: 3
          httpGet:
            port: 10254
            path: /healthz
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            port: 10254
            path: /healthz
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        lifecycle:
          preStop:
            exec:
              command:
              - /wait-shutdown
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          runAsUser: 101
      volumes:
      - name: webhook-cert
        secret:
          secretName: ingress-nginx-admission
  minReadySeconds: 0
  revisionHistoryLimit: 10
---
apiVersion: admissionregistration.k8s.io/v1beta1 # Source: ingress-nginx/templates/admission-webhooks/validating-webhook.yaml
kind: ValidatingWebhookConfiguration
metadata:
  name: ingress-nginx-admission
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.31.1
    helm.sh/chart: ingress-nginx-2.0.1
webhooks:
- name: validate.nginx.ingress.kubernetes.io
  clientConfig:
    service:
      name: ingress-nginx-controller-admission
      namespace: ingress-nginx
      path: /extensions/v1beta1/ingresses
  failurePolicy: Fail
  rules:
  - resources:
    - ingresses
    apiGroups:
    - extensions
    - networking.k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
---
apiVersion: rbac.authorization.k8s.io/v1 # Source: ingress-nginx/templates/admission-webhooks/job-patch/clusterrole.yaml
kind: ClusterRole
metadata:
  name: ingress-nginx-admission
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.31.1
    helm.sh/chart: ingress-nginx-2.0.1
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
rules:
- resources:
  - validatingwebhookconfigurations
  apiGroups:
  - admissionregistration.k8s.io
  verbs:
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1 # Source: ingress-nginx/templates/admission-webhooks/job-patch/clusterrolebinding.yaml
kind: ClusterRoleBinding
metadata:
  name: ingress-nginx-admission
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.31.1
    helm.sh/chart: ingress-nginx-2.0.1
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
roleRef:
  name: ingress-nginx-admission
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
subjects:
- name: ingress-nginx-admission
  namespace: ingress-nginx
  kind: ServiceAccount
---
apiVersion: batch/v1 # Source: ingress-nginx/templates/admission-webhooks/job-patch/job-createSecret.yaml
kind: Job
metadata:
  name: ingress-nginx-admission-create
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.31.1
    helm.sh/chart: ingress-nginx-2.0.1
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      name: ingress-nginx-admission-create
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/version: 0.31.1
        helm.sh/chart: ingress-nginx-2.0.1
    spec:
      restartPolicy: OnFailure
      serviceAccountName: ingress-nginx-admission
      containers:
      - name: create
        image: jettech/kube-webhook-certgen:v1.0.0
        args:
        - create
        - --host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.ingress-nginx.svc
        - --namespace=ingress-nginx
        - --secret-name=ingress-nginx-admission
        imagePullPolicy: IfNotPresent
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000
---
apiVersion: batch/v1 # Source: ingress-nginx/templates/admission-webhooks/job-patch/job-patchWebhook.yaml
kind: Job
metadata:
  name: ingress-nginx-admission-patch
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.31.1
    helm.sh/chart: ingress-nginx-2.0.1
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      name: ingress-nginx-admission-patch
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/version: 0.31.1
        helm.sh/chart: ingress-nginx-2.0.1
    spec:
      restartPolicy: OnFailure
      serviceAccountName: ingress-nginx-admission
      containers:
      - name: patch
        image: jettech/kube-webhook-certgen:v1.0.0
        args:
        - patch
        - --webhook-name=ingress-nginx-admission
        - --namespace=ingress-nginx
        - --patch-mutating=false
        - --secret-name=ingress-nginx-admission
        - --patch-failure-policy=Fail
        imagePullPolicy:
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000
---
apiVersion: rbac.authorization.k8s.io/v1 # Source: ingress-nginx/templates/admission-webhooks/job-patch/role.yaml
kind: Role
metadata:
  name: ingress-nginx-admission
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.31.1
    helm.sh/chart: ingress-nginx-2.0.1
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
rules:
- resources:
  - secrets
  apiGroups:
  - ''
  verbs:
  - get
  - create
---
apiVersion: rbac.authorization.k8s.io/v1 # Source: ingress-nginx/templates/admission-webhooks/job-patch/rolebinding.yaml
kind: RoleBinding
metadata:
  name: ingress-nginx-admission
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.31.1
    helm.sh/chart: ingress-nginx-2.0.1
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
roleRef:
  name: ingress-nginx-admission
  kind: Role
  apiGroup: rbac.authorization.k8s.io
subjects:
- name: ingress-nginx-admission
  namespace: ingress-nginx
  kind: ServiceAccount
---
apiVersion: v1 # Source: ingress-nginx/templates/admission-webhooks/job-patch/serviceaccount.yaml
kind: ServiceAccount
metadata:
  name: ingress-nginx-admission
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/version: 0.31.1
    helm.sh/chart: ingress-nginx-2.0.1
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
